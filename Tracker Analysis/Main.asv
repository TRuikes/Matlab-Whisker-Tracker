clear
clc

% Initialize
% Load and preprocess data
%
% The data is not sorted per cluster, that is, the angle is available per
% individual trace, not for a cluster troughout the video...
datapath = 'E:\Studie\Stage Neurobiologie\Videos\Analysed Videos';
load(fullfile(datapath,'Tracked_Videos.mat'));



close all
for fidx= 4
    clearvars -except fidx datapath T
    load( Tracked_Videos.ExportNames{fidx} );
    mfile = fullfile(Settings.PathName, Settings.FileName);
    mfile = [mfile(1:end-4) '_Annotations.mat'];
    if exist(mfile,'file')
        load(mfile)
        manualdata = 1;
    else
        manualdata = 0;
    end
    
    
    Tracker.Traces = Output.Traces;
    Tracker.Objects = Output.Objects;
    Tracker.Nose = Output.Nose;
    Tracker.Origins = Output.Origins;
    Tracker.Headvec = Output.AngleVector;
    Tracker.Parameters = getParams(Tracker,'raw');
    figpath = fullfile(datapath,'figures');
    Tracker =  CleanTraces(Tracker); % Filtering noise
    Tracker.Parameters_clean = getParams(Tracker,'clean');
    Tracker = DetectTouch(Tracker);
    
    
    
    
    if manualdata
        Manual.TracesRaw = CurvesByFrame;
        out = ConvertAnnotations(CurvesByFrame); % Store manual data in same format as tracker data
        Manual.Traces = out.Traces';
        Manual.Objects= Output.Objects;
        Manual.Nose = Output.Nose;
        Manual.Headvec = Output.AngleVector;
        Manual.Parameters = getParams(Manual,'raw');
        
        
        
    else
        Manual = [];
    end
    
    General = getstats(Tracker,Manual);
    
    FIG_RAWDATA;
    FIG_CLEAN;
    
    if manualdata
        FIG_COMPARE;
    end
    %
   
    vidout = [Tracked_Videos.ExportNames{fidx} '_clean'];
        
    v = VideoWriter(vidout,'Motion JPEG AVI');
    filterSettings;
    open(v)
    figure;
    set(gcf,'position',[100 100 round(Settings.export_video_scaling*Settings.Video_heigth) ...
        round(Settings.export_video_scaling*Settings.Video_width)]);
    set(gcf,'Units','pixels')
    set(gca,'Units','normalized')
    set(gca,'Position',[0 0 1 1])
    
    colormap('gray')
    nframes=  size(Tracker.Traces,1);
    
    c1 = Settings.colors.tracker_dark;
    c2 = Settings.colors.manual_light;
    for ii = 1:nframes
        Settings.Current_frame = ii;
        f = LoadFrame(Settings);
        cla
        imagesc(f);
        hold on
        
        
        for iii = 1:size(Tracker.Traces_clean{ii},2)
            t = Tracker.Traces_clean{ii}{iii};
            plot(t(:,2), t(:,1), 'color',c1,'LineWidth',2)
        end
        
        for iii = 1:size(Tracker.Touch{ii},2)
            if ~isempty(Tracker.Touch{ii}{iii})
                pts = Tracker.Touch{ii}{iii};
                pt = [];
                for iiii = 1:length(pts)
                    pt(iiii,:) = Tracker.Traces_clean{ii}{iii}(pts(iiii),:);
                end
                
                scatter( pt(:,2), pt(:,1), 'MarkerFaceColor',c1,'MarkerEdgeColor','y')
                
                
            end
        end
        
        
        if manualdata
            for iii = 1:size(Manual.Traces{ii},2)
                t = Manual.Traces{ii}{iii};
                plot(t(:,2), t(:,1), 'color', c2,'LineStyle','--','LineWidth',2)
            end
            
            
            
        end
        hold off
        drawnow
        
        frame = getframe;
        writeVideo(v, frame.cdata);
        
    end
    
    close(v)
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
end



